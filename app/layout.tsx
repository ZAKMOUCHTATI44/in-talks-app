import type { Metadata } from "next";
import { Montserrat } from "next/font/google";
import "./globals.css";
import { Locale } from "@/i18n.config";
import { ThemeProvider } from "@/components/theme-provider";
import { getServerSession } from "next-auth";
import SessionProvider from "@/components/provider/SessionProvider";

const montserrat = Montserrat({
  subsets: ["cyrillic-ext"],
});

// const roboto = Roboto({
//   weight : ['100' , '300' , '400' , '500' , '700' , '900'],
//   subsets: ["greek"],

// })

// const poppins = Poppins({
//   weight: ["100", "200", "300", "400", "500", "600", "700", "900"],
//   subsets: ["latin-ext"],
// });
export const metadata: Metadata = {
  title: "In Talks",
  description: "Generated by create next app",
};

interface PropsType {
  params: Promise<{ lang: Locale }>;
  children: React.ReactNode;
}

export default async function RootLayout({ children, params }: PropsType) {
  const { lang } = await params;
  const session = await getServerSession();

  return (
    <html lang={lang} suppressHydrationWarning>
      <body className={`${montserrat.className} dark:bg-bgDarkColor`}>
        <SessionProvider session={session}>
          <ThemeProvider
            attribute="class"
            defaultTheme="dark"
            enableSystem
            disableTransitionOnChange
          >
            {children}
          </ThemeProvider>
        </SessionProvider>
      </body>
    </html>
  );
}
